@page
@model IndexModel
@{
    ViewData["Title"] = "Signalr AspNetCore 2.0 Most Basic Demo";
}
<h2>@ViewData["Title"]</h2>

<div class="row">
    <div id="chat-area" class="col-lg-5">

        <form id="message-form" target="#">
            <div class="input-group">
                <input type="text" id="new-message" placeholder="Type a message to send" class="form-control" />
                <span class="input-group-btn">
                    <button type="submit" id="send-message" class="btn btn-default">Send Message!</button>
                </span>
            </div>
        </form>
        <ul id="messages"></ul>
    </div>
</div>

<script src="~/lib/signalr/signalr-client.js"></script>
<script>
    var transportType = signalR.TransportType.WebSockets; //signalR.TransportType.ServerSentEvents;//
    var logger = new signalR.ConsoleLogger(signalR.LogLevel.Information);
    var http = new signalR.HttpConnection(`http://${document.location.host}/demo`, { transport: transportType, logger: logger });
    var connection = new signalR.HubConnection(http, logger);

    connection.start();

    connection.on('messageSent', message => { processIncomingMessage(message); });

    document.getElementById('message-form').addEventListener('submit', event => { event.preventDefault(); sendMessage(); });

    function sendMessage() {
        var messageInput = document.getElementById('new-message');

        connection.invoke('sendMessage', messageInput.value)
            .then(messageInput.value = "")
            .catch(err => alert(err));
    }

    function processIncomingMessage(message) {
        var messageItem = document.createElement('li');

        messageItem.innerText = message;
        document.getElementById('messages').appendChild(messageItem);
    };

</script>